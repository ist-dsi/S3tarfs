#!/usr/bin/python3

import argparse
import tempfile
import os

parser = argparse.ArgumentParser()
group_action = parser.add_mutually_exclusive_group(required=True)
group_action.add_argument("-c", "--create", action="store_true",
                          help="create archive")
group_action.add_argument("-x", "--extract", action="store_true",
                          help="extract archive")
group_action.add_argument("-t", "--list", action="store_true",
                          help="list contents of archive")
parser.add_argument("-v", "--verbose", action="count", default=0,
                    help="increase output verbosity")
parser.add_argument("-f", "--file",
                    help="name file of the archive")
parser.add_argument("--host",
                    help="URL of S3 gateway to connect to")
parser.add_argument("--access_key",
                    help="access key")
parser.add_argument("--secret_key",
                    help="secret key")
parser.add_argument("-T", "--files-from",
                    help="list of files to process")
parser.add_argument("--null", action="store_true",
                    help="list of files is null terminated, goot for find --print0")
parser.add_argument("bucket",
                    help="S3 bucket to process")
parser.add_argument("files", nargs='*',
                    help="Files to proccess")
args = parser.parse_args()
verbosity=args.verbose
# print(args.verbose)
# print(args.file)
# print(args.access_key)
# print(args.secret_key)
# print(args.host)
# print(args.files_from)
# print(args.bucket)
# print(args.files)

if args.file is None:
    print("Not supported yet")
    exit(1)

# mktemp -d
tmpdir = tempfile.mkdtemp()
# print(tmpdir)

# s3fs s3fuse:/ /root/S3 -o passwd_file=/root/.passwd-s3fs

s3fs_args = ''+args.bucket+' '+tmpdir+' '
if args.host is not None:
    s3fs_args = s3fs_args+' -o url='+args.host

s3fs_files = ''
for f in args.files:
    s3fs_files = s3fs_files+' '+f

# print('s3fs '+s3fs_args)
os.system('s3fs '+s3fs_args)

os.chdir(tmpdir)

if args.create is True:
    # print('tar -c -f "'+args.file+'" '+s3fs_files)
    os.system('tar -c -f "'+args.file+'" '+s3fs_files)

if args.extract is True:
    # print('tar -x -f "'+args.file+'" '+s3fs_files)
    os.system('tar -x -f "'+args.file+'" '+s3fs_files)

if args.list is True:
    # print('tar -t -f "'+args.file+'" '+s3fs_files)
    os.system('tar -t -f "'+args.file+'" '+s3fs_files)

# umount /root/S3
os.chdir('/')
os.system('umount '+tmpdir)

os.rmdir(tmpdir)
